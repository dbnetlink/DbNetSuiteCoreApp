@page
@using DbNetSuiteCore.Enums;
@using DbNetSuiteCore.Enums.DbNetCombo;
@using DbNetSuiteCoreApp.ViewModels;
@using DbNetSuiteCore.Components;

@model SampleModel

@section Title
{
    <p>Multiple options can be displayed by setting the @Model.HelpLink("dbnetcombo_properties.htm#Size","Size") property to the number options to be displayed and setting the @Model.HelpLink("dbnetcombo_properties.htm#MultipleSelect","MultipleSelect") property allows multiple rows to be selected.</p>
}

@section Markup
    {
    <div class="source ps-2">
        <div class="row">
            <div class="col" id="customerCombo"></div>
            <div class="col">
                <span id="selectedCustomer"></span>
            </div>
        </div>
    </div>
}

@section Control
{
    @{
        DbNetComboCore customerCombo = new DbNetComboCore("northwind", "customers", "customerid", "companyname", "customerCombo") { Size = 20, MultipleSelect = true };
        customerCombo.Bind(EventType.OnOptionSelected, "showSelectedCustomer");
        @customerCombo.Render()
    }
}

@section Source {
DbNetComboCore customerCombo = new DbNetComboCore("northwind", "customers", "customerid", "companyname", "customerCombo") { Size = 20, MultipleSelect = true };
customerCombo.Bind(EventType.OnOptionSelected, "showSelectedCustomer");
@@customerCombo.Render()
    }

@section Scripts
{
    <script type="text/javascript" class="source">
        function showSelectedCustomer(control, args) {
            $("#selectedCustomer").html(`Selected Customer(s): <b>${args.selectedValues.join(', ')}</b>`)
        }
    </script>
}