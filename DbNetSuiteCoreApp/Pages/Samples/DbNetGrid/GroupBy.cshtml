@page
@using DbNetSuiteCoreApp.ViewModels;
@using DbNetSuiteCore.Components;
@using DbNetSuiteCore.Enums.DbNetGrid;
@using DbNetSuiteCore.Enums;
@model SampleModel

@section Title
{
    <p>The @Model.HelpLink("properties.htm#GroupBy", "GroupBy") property groups the returned data by all the columns that do not have an @Model.HelpLink("methods.htm#Aggregate", "Aggregate") property set. In this example the data is grouped by Product.</p>
}

@section Control
{
    @{
        DbNetGridCore productSalesSummaryGrid = new DbNetGridCore("northwind", "Invoices");
        productSalesSummaryGrid.Columns = new List<string>() { "ProductName", "OrderDate as FirstOrder", "OrderDate as LastOrder", "(UnitPrice * Quantity) as TotalValue", "(UnitPrice * Quantity) as AvgValue" };
        productSalesSummaryGrid.Labels = new List<string>() {  "Product", "First Order", "Last Order", "Total Value", "Average Value" };
        productSalesSummaryGrid.GroupBy = true;
        productSalesSummaryGrid.Column(new String[] { "TotalValue", "AvgValue" }).Format("c");
        productSalesSummaryGrid.Column(new String[] { "FirstOrder", "LastOrder" }).Format("MMM yyyy");
        productSalesSummaryGrid.Column(new String[] { "TotalValue", "AvgValue" }).DataType(typeof(Decimal));
        productSalesSummaryGrid.Column("FirstOrder").Aggregate(AggregateType.Min);
        productSalesSummaryGrid.Column("LastOrder").Aggregate(AggregateType.Max);
        productSalesSummaryGrid.Column("TotalValue").Aggregate(AggregateType.Sum);
        productSalesSummaryGrid.Column("AvgValue").Aggregate(AggregateType.Avg);
        @productSalesSummaryGrid.Render()
    }
}


@section Source {
DbNetGridCore productSalesSummaryGrid = new DbNetGridCore("northwind", "Invoices");
productSalesSummaryGrid.Columns = new List<string>() { "ProductName", "OrderDate as FirstOrder", "OrderDate as LastOrder", "(UnitPrice * Quantity) as TotalValue", "(UnitPrice * Quantity) as AvgValue" };
productSalesSummaryGrid.Labels = new List<string>() {  "Product", "First Order", "Last Order", "Total Value", "Average Value" };
productSalesSummaryGrid.GroupBy = true;
productSalesSummaryGrid.Column(new String[] { "TotalValue", "AvgValue" }).Format("c");
productSalesSummaryGrid.Column(new String[] { "FirstOrder", "LastOrder" }).Format("MMM yyyy");
productSalesSummaryGrid.Column(new String[] { "TotalValue", "AvgValue" }).DataType(typeof(Decimal));
productSalesSummaryGrid.Column("FirstOrder").Aggregate(AggregateType.Min);
productSalesSummaryGrid.Column("LastOrder").Aggregate(AggregateType.Max);
productSalesSummaryGrid.Column("TotalValue").Aggregate(AggregateType.Sum);
productSalesSummaryGrid.Column("AvgValue").Aggregate(AggregateType.Avg);
@@productSalesSummaryGrid.Render()
}
