@page
@using DbNetSuiteCoreApp.ViewModels;
@using DbNetSuiteCore.Components;
@using DbNetSuiteCore.Enums.DbNetGrid;
@using DbNetSuiteCore.Enums;
@model SampleModel

@section Title
    {
    <p>A child grid can be added to the parent grid as a nested grid which is displayed adjacent to the parent row. To add a nested grid simply create the instance of the control and assign the reference of the child grid control to the @Model.HelpLink("properties.htm#NestedGrid", "NestedGrid") property of the parent grid control. You will also need to specify which column in the child grid is the @Model.HelpLink("methods.htm#ForeignKey", "ForeignKey") which is matched against the @Model.HelpLink("methods.htm#PrimaryKey", "PrimaryKey") in the parent control.</p>
}

@section Control
{
    @{
        DbNetGridCore customersGrid = new DbNetGridCore("northwind", "customers");
        customersGrid.Columns = new List<string>() { "CustomerID", "CompanyName", "Address", "City" };
        customersGrid.Column("CustomerID").Hidden();

        DbNetGridCore ordersGrid = new DbNetGridCore("northwind", "orders");
        ordersGrid.ToolbarPosition = ToolbarPosition.Hidden;
        ordersGrid.Columns = new List<string>() { "OrderID", "CustomerID", "EmployeeID", "OrderDate", "RequiredDate", "ShippedDate", "ShipVia", "Freight", "ShipName", "ShipAddress", "ShipCity", "ShipRegion", "ShipPostalCode", "ShipCountry" };
        ordersGrid.Column("CustomerID").ForeignKey().Hidden();
        ordersGrid.Column("EmployeeID").Lookup(new Lookup("Employees", "EmployeeId", "lastname + ',' + firstname")).Label("Employee");
        ordersGrid.Column("ShipVia").Lookup(new Lookup("Shippers", "ShipperId", "CompanyName"));

        customersGrid.NestedGrid = ordersGrid;

        DbNetGridCore orderDetailsGrid = new DbNetGridCore("northwind", "[order details]");
        orderDetailsGrid.ToolbarPosition = ToolbarPosition.Hidden;
        orderDetailsGrid.Columns = new List<string>() { "OrderID", "ProductID", "Quantity", "UnitPrice" };
        orderDetailsGrid.Column("OrderID").ForeignKey().Hidden();
        orderDetailsGrid.Column("ProductID").Lookup(new Lookup("Products", "ProductId", "ProductName")).Label("Product");

        ordersGrid.NestedGrid = orderDetailsGrid;

        @customersGrid.Render()
    }
}

@section Source {
DbNetGridCore customersGrid = new DbNetGridCore("northwind", "customers");
customersGrid.Columns = new List<string>() { "CustomerID", "CompanyName", "Address", "City" };
customersGrid.Column("CustomerID").Hidden();

DbNetGridCore ordersGrid = new DbNetGridCore("northwind", "orders");
ordersGrid.ToolbarPosition = ToolbarPosition.Hidden;
ordersGrid.Columns = new List<string>() { "OrderID", "CustomerID", "EmployeeID", "OrderDate", "RequiredDate", "ShippedDate", "ShipVia", "Freight", "ShipName", "ShipAddress", "ShipCity", "ShipRegion", "ShipPostalCode", "ShipCountry" };
ordersGrid.Column("CustomerID").ForeignKey().Hidden();
ordersGrid.Column("EmployeeID").Lookup(new Lookup("Employees", "EmployeeId", "lastname + ',' + firstname")).Label("Employee");
ordersGrid.Column("ShipVia").Lookup(new Lookup("Shippers", "ShipperId", "CompanyName"));

customersGrid.NestedGrid = ordersGrid;

DbNetGridCore orderDetailsGrid = new DbNetGridCore("northwind", "[order details]");
orderDetailsGrid.ToolbarPosition = ToolbarPosition.Hidden;
orderDetailsGrid.Columns = new List<string>() { "OrderID", "ProductID", "Quantity", "UnitPrice" };
orderDetailsGrid.Column("OrderID").ForeignKey().Hidden();
orderDetailsGrid.Column("ProductID").Lookup(new Lookup("Products", "ProductId", "ProductName")).Label("Product");

ordersGrid.NestedGrid = orderDetailsGrid;

@@customersGrid.Render()
}