@page
@using DbNetSuiteCore.Enums.DbNetGrid;
@using DbNetSuiteCoreApp.ViewModels;
@using DbNetSuiteCore.Components;
@using DbNetSuiteCore.Enums;

@using Microsoft.AspNetCore.Html
@model SampleModel
@section Title
    {
    <p>Instances of DbNetGridCore can be linked together to create parent child relationships. To link a child grid simply add it to the parent control using the @Model.HelpLink("methods.htm#AddLinkedGrid", "AddLinkedGrid") method. The grids are linked by automatically associating the column in the child grid specified as a @Model.HelpLink("methods.htm#ForeignKey", "ForeignKey") with the column in the parent grid identified as a @Model.HelpLink("methods.htm#PrimaryKey", "PrimaryKey") (usually automatic). This sample also demonstrates how to use custom HTML markup by specifyng the <b>Id</b> of the containing element as a 3rd argument to the @Model.HelpLink("constructors.htm","constructor"). It also uses the client-side API method @Model.HelpLink("clientsideapi.htm#columnValue", "columnValue") to update the tab titles for the linked grids.</p>
}

@section Styles
    {
    <style>
        .dbnetsuite {
            margin-top: 10px;
        }
    </style>
}

@section Markup
    {
    <div class="source">
        <ul class="nav nav-tabs" id="myTab" role="tablist">
            @Tab("Customers",true)
            @Tab("Orders",false)
            @Tab("Order Details",false)
        </ul>
        <div class="tab-content" id="linkedGrids">
            <div class="tab-pane fade show active" id="customers" role="tabpanel" aria-labelledby="customers-tab">
                <div id="customersGrid"></div>
            </div>
            <div class="tab-pane fade" id="orders" role="tabpanel" aria-labelledby="orders-tab">
                <div id="ordersGrid"></div>
            </div>
            <div class="tab-pane fade" id="orderdetails" role="tabpanel" aria-labelledby="orderdetails-tab">
                <div id="orderDetailsGrid"></div>
            </div>
        </div>
    </div>
}
@section Control
    {
    @{
        DbNetGridCore orderDetailsGrid = new DbNetGridCore("northwind", "[order details]", "orderDetailsGrid")
                {
                    Columns = new List<string> { "OrderID", "ProductID", "Quantity", "UnitPrice" },
                    PageSize = 10
                };

        orderDetailsGrid.Column("OrderID").ForeignKey();
        orderDetailsGrid.Column("ProductID").Lookup(new Lookup("Products", "ProductId", "ProductName")).Label("Product");
        orderDetailsGrid.Column("UnitPrice").Format("c");

        DbNetGridCore ordersGrid = new DbNetGridCore("northwind", "orders", "ordersGrid")
                {
                    Columns = new List<string> { "OrderID", "CustomerID", "EmployeeID", "OrderDate", "RequiredDate", "ShippedDate", "ShipVia", "Freight" },
                    PageSize = 10
                };

        ordersGrid.Column("CustomerID").Hidden().ForeignKey();
        ordersGrid.Column("EmployeeID").Lookup(new Lookup("Employees", "EmployeeId", "lastname + ',' + firstname")).Label("Employee");
        ordersGrid.Column("ShipVia").Lookup(new Lookup("Suppliers", "SupplierId", "CompanyName"));
        ordersGrid.Column("Freight").Format("c");
        ordersGrid.Bind(EventType.OnRowSelected, "setOrderDetailsTabLabel");
        ordersGrid.AddLinkedControl(orderDetailsGrid);

        DbNetGridCore customersGrid = new DbNetGridCore("northwind", "customers", "customersGrid")
                {
                    Columns = new List<string> { "CustomerID", "CompanyName", "Address", "City" },
                    PageSize = 10
                };

        customersGrid.Column("CustomerID").Hidden();
        customersGrid.AddLinkedControl(ordersGrid);
        customersGrid.Bind(EventType.OnRowSelected, "setOrderTabLabel");

        @customersGrid.Render()
    }
}

@section Source {
DbNetGridCore orderDetailsGrid = new DbNetGridCore("northwind", "[order details]", "orderDetailsGrid")
{
    Columns = new List<string>{ "OrderID", "ProductID", "Quantity", "UnitPrice" },
    PageSize = 10
};

orderDetailsGrid.Column("OrderID").ForeignKey();
orderDetailsGrid.Column("ProductID").Lookup(new Lookup("Products", "ProductId", "ProductName")).Label("Product");
orderDetailsGrid.Column("UnitPrice").Format("c");

DbNetGridCore ordersGrid = new DbNetGridCore("northwind", "orders", "ordersGrid")
{
    Columns = new List<string>{ "OrderID", "CustomerID", "EmployeeID", "OrderDate", "RequiredDate", "ShippedDate", "ShipVia", "Freight" },
    PageSize = 10
};

ordersGrid.Column("CustomerID").Hidden().ForeignKey();
ordersGrid.Column("EmployeeID").Lookup(new Lookup("Employees", "EmployeeId", "lastname + ',' + firstname")).Label("Employee");
ordersGrid.Column("ShipVia").Lookup(new Lookup("Suppliers", "SupplierId", "CompanyName"));
ordersGrid.Column("Freight").Format("c");
ordersGrid.Bind(EventType.OnRowSelected, "setOrderDetailsTabLabel");
ordersGrid.AddLinkedControl(orderDetailsGrid);

DbNetGridCore customersGrid = new DbNetGridCore("northwind", "customers", "customersGrid")
{
    Columns = new List<string>{ "CustomerID", "CompanyName", "Address", "City" },
    PageSize = 10
};

customersGrid.Column("CustomerID").Hidden();
customersGrid.AddLinkedControl(ordersGrid);
customersGrid.Bind(EventType.OnRowSelected, "setOrderTabLabel");

@@customersGrid.Render()
}

@section Scripts
{
<script type="text/javascript" class="source">
    function setOrderTabLabel(grid, args) {
        $("button#orders-tab").html("<b>" + grid.columnValue("companyname", args.row) + "</b> orders")
    }

    function setOrderDetailsTabLabel(grid, args) {
        $("button#orderdetails-tab").html("Order <b>" + grid.columnValue("orderId", args.row) + "</b> details")
    }
</script>
}

@functions
{
    public static HtmlString Tab(string label, bool active)
    {
        string name = label.ToLower().Replace(" ", string.Empty);
        return new HtmlString($"<li class=\"nav-item\" role=\"presentation\"><button class=\"nav-link {(active ? "active" : string.Empty)}\" id=\"{name}-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#{name}\" type=\"button\" role=\"tab\" aria-controls=\"{name}\" aria-selected=\"{active.ToString().ToLower()}\">{label}</button></li>");
    }
}