@page
@using DbNetSuiteCore.Enums.DbNetGrid;
@using DbNetSuiteCoreApp.ViewModels;
@using DbNetSuiteCore.Components;
@using DbNetSuiteCore.Enums;
@model SampleModel

@section Title {
    <p>An expanded view of the currently selected record can be achieved by using the @Model.HelpLink("properties.htm#View", "View") property to make a view dialog available from the toolbar. The columns that appear in the dialog can be controlled by setting the column @Model.HelpLink("methods.htm#View", "View") property to true. The example also uses the @Model.HelpLink("methods.htm#View", "OnViewRecordSelected") event to set the title of the View dialog for the record being displayed</p>
}

@section Control {
    @{
        DbNetGridCore employeesGrid = new DbNetGridCore("northwind", "employees")
        {
            View = true
        };
        employeesGrid.SetColumnLookup("reportsto", new Lookup("Employees", "EmployeeId", "lastname + ',' + firstname"));
        employeesGrid.SetColumnAsImage("Photo", new ImageConfiguration("jpg"));
        employeesGrid.SetColumnHidden(new String[] { "photo", "notes", "photopath" });
        employeesGrid.SetColumnView(new String[] { "firstname", "lastname", "photo", "notes", "photopath" });
        employeesGrid.Bind(EventType.OnViewRecordSelected, "updateTitle");

        @employeesGrid.Render()
    }
}

@section Scripts {
    <script type="text/javascript" class="source">
        function updateTitle(sender, args) {
            args.dialog.dialog("option", "title", args.record["firstname"] + " " + args.record["lastname"]);
        }
    </script>
}