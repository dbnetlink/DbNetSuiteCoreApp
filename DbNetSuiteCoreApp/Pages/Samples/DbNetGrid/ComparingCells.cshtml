@page
@using DbNetSuiteCore.Enums.DbNetGrid;
@using DbNetSuiteCoreApp.ViewModels;
@using DbNetSuiteCore.Components;
@using DbNetSuiteCore.Enums;

@model SampleModel

@section Title
{
	<p>If you want to inspect the values in the grid after the page loads you can use the @Model.HelpLink("events.htm#OnRowTransform", "OnRowTransform") event which will invoke the client-side method @Model.HelpLink("clientsideapi.htm#columnValue", "columnValue") to identify and compare column cell values. In this demo the row is highlighted if the re-order level is above the stock level.</p>
}

@section Control {
	@{
		DbNetGridCore productsGrid = new DbNetGridCore("northwind", "products");
		productsGrid.SetColumnLabel("supplierid", "Supplier");
		productsGrid.SetColumnLabel("categoryid", "Catgeory");

		productsGrid.SetColumnLookup("supplierid", new Lookup("suppliers", "supplierid", "companyname"));
		productsGrid.SetColumnLookup("categoryid", new Lookup("categories", "categoryid", "categoryname"));
		productsGrid.SetColumnFormat("unitprice", "c");
		productsGrid.Bind(EventType.OnRowTransform, "highlightOrderLevels");
		productsGrid.Bind(EventType.OnViewRecordSelected, "highlightViewOrderLevels");

		productsGrid.View = true;
		productsGrid.ViewLayoutColumns = 2;
		@productsGrid.Render()
	}
}


@section Source {
DbNetGridCore productsGrid = new DbNetGridCore("northwind", "products");
productsGrid.SetColumnLabel("supplierid", "Supplier");
productsGrid.SetColumnLabel("categoryid", "Catgeory");

productsGrid.SetColumnLookup("supplierid", new Lookup("suppliers", "supplierid", "companyname"));
productsGrid.SetColumnLookup("categoryid", new Lookup("categories", "categoryid", "categoryname"));
productsGrid.SetColumnFormat("unitprice", "c");
productsGrid.Bind(EventType.OnRowTransform, "highlightOrderLevels");
productsGrid.Bind(EventType.OnViewRecordSelected, "highlightViewOrderLevels");

productsGrid.View = true;
productsGrid.ViewLayoutColumns = 2;
@@productsGrid.Render()
}


@section Scripts
{
<script type="text/javascript" class="source">
function highlightOrderLevels(sender, args) {
	var unitsInStock = parseInt(sender.columnValue("UnitsInStock", args.row));
	var reorderLevel = parseInt(sender.columnValue("ReorderLevel", args.row));

	if (unitsInStock < reorderLevel) {
		$(args.row).css("backgroundColor", "#F2D7D5").css("color", "#CD6155");
		$(args.row.cells[sender.columnIndex("UnitsInStock")]).css("backgroundColor", "#CD6155").css("color", "#F2D7D5");
		$(args.row.cells[sender.columnIndex("ReorderLevel")]).css("backgroundColor", "#CD6155").css("color", "#F2D7D5");
	}
}

function highlightViewOrderLevels(sender, args) {
	var unitsInStock = parseInt(sender.columnValue("UnitsInStock", args.row));
	var reorderLevel = parseInt(sender.columnValue("ReorderLevel", args.row));

	if (unitsInStock < reorderLevel) {
		$(sender.viewElement("UnitsInStock")).css("backgroundColor", "#CD6155").css("color", "#F2D7D5");
		$(sender.viewElement("ReorderLevel")).css("backgroundColor", "#CD6155").css("color", "#F2D7D5");
	}

	$(sender.viewElement("productname")).css("whiteSpace", "nowrap")
	$(sender.viewElement("supplierid")).css("whiteSpace", "nowrap")
	$(sender.viewElement("categoryid")).css("whiteSpace", "nowrap")
}
</script>
}