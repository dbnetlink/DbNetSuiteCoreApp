@page
@using DbNetSuiteCore.Enums.DbNetEdit;
@using DbNetSuiteCoreApp.ViewModels;
@using DbNetSuiteCore.Components;

@model SampleModel

@section Title
{
    <p>The @Model.HelpLink("dbnetedit_events.htm","OnRecordSelected") event can be used to conditionally configure the form elements based on the data. In this example the form elements are disabled for product records that have the <b>discontinued</b> column set to <b>true</b>.</p>
}

@section Control {
    @{
        DbNetEditCore productsForm = new DbNetEditCore("northwind", "products");
        productsForm.Column("discontinued").DataType(typeof(Boolean));
        productsForm.Bind(EventType.OnRecordSelected, "disableFormForInactiveProducts");
        productsForm.Column("supplierid").Lookup(new Lookup("suppliers", "supplierid", "companyname")).Label("Supplier");
        productsForm.Column("categoryid").Lookup(new Lookup("categories", "categoryid", "categoryname")).Label("Category");
        productsForm.Column(new string[] { "ProductName", "Discontinued" }).Browse();
        @productsForm.Render()
    }
}

@section Source {
DbNetEditCore productsForm = new DbNetEditCore("northwind", "products");
productsForm.Column("discontinued").DataType(typeof(Boolean));
productsForm.Bind(EventType.OnRecordSelected, "disableFormForInactiveProducts");
productsForm.Column("supplierid").Lookup(new Lookup("suppliers", "supplierid", "companyname")).Label("Supplier");
productsForm.Column("categoryid").Lookup(new Lookup("categories", "categoryid", "categoryname")).Label("Category");
productsForm.Column(new string[] { "ProductName", "Discontinued" }).Browse();
@@productsForm.Render()
}

@section Scripts {
    <script type="text/javascript" class="source">
        function disableFormForInactiveProducts(sender, args) {
            var discontinued = sender.columnValue("discontinued");
            for (let i = 0; i < args.formElements.length; i++) {
                $(args.formElements[i]).prop("disabled", discontinued);
            }
        }
    </script>
}