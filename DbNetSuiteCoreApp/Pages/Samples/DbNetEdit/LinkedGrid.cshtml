@page
@using DbNetSuiteCore.Enums.DbNetEdit;
@using DbNetSuiteCoreApp.ViewModels;
@using DbNetSuiteCore.Components;
@using DbNetSuiteCore.Enums;
@using DbNetSuiteCore.Enums.DbNetGrid;

@using Microsoft.AspNetCore.Html
@model SampleModel
@section Title
    {
    <p>Instances of DbNetGridCore can be linked to a form control. To link a child grid simply add it to the parent control using the @Model.HelpLink("dbnetedit_methods.htm#AddLinkedControl", "AddLinkedControl") method. The edit controls are linked by automatically associating the column in the child edit control specified as a @Model.HelpLink("methods.htm#ForeignKey", "ForeignKey") with the column in the parent Edit identified as a @Model.HelpLink("methods.htm#PrimaryKey", "PrimaryKey") (usually automatic). This sample also demonstrates how to use custom HTML markup by specifyng the <b>Id</b> of the containing element as a 3rd argument to the @Model.HelpLink("constructors.htm","constructor").</p>
}

@section Markup
    {
    <div class="source">
        <div class="row">
            <div class="col">
                <h5>Customers</h5>
                <hr />
                <div id="customersForm"></div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <h5>Orders</h5>
                <hr />
                <div id="ordersGrid"></div>
            </div>
        </div>
    </div>
}



@section Control {
    @{
        DbNetGridCore ordersGrid = new DbNetGridCore("northwind", "orders", "ordersGrid")
                {
                    Columns = new List<string> { "OrderID", "CustomerID", "EmployeeID", "OrderDate", "RequiredDate", "ShippedDate", "Freight", "ShipVia" },
                    Insert = true,
                    QuickSearch = true,
                    Delete = true,
                    Update = true
                };

        ordersGrid.SetColumnAsForeignKey("CustomerID");
        ordersGrid.SetColumnLookup("EmployeeID", new Lookup("Employees", "EmployeeId", "lastname + ',' + firstname"));
        ordersGrid.SetColumnLookup("ShipVia", new Lookup("Shippers", "ShipperId", "CompanyName"));
        ordersGrid.SetColumnFormat("Freight", "c");
        ordersGrid.SetColumnLabel("EmployeeID", "Employee");

        DbNetEditCore customersEdit = new DbNetEditCore("northwind", "customers", "customersForm")
                {
                    Columns = new List<string> { "CustomerID", "CompanyName", "Address", "City" },
                    Insert = true,
                    QuickSearch = true,
                    Delete = true
                };

        customersEdit.SetColumnHidden("CustomerID");
        customersEdit.AddLinkedControl(ordersGrid);

        @customersEdit.Render()
    }
}

@section Source {
    DbNetGridCore ordersGrid = new DbNetGridCore("northwind", "orders")
    {
        Columns = new List<string>
        { "OrderID", "CustomerID", "EmployeeID", "OrderDate", "RequiredDate", "ShippedDate", "Freight", "ShipVia" },
        Insert = true,
        QuickSearch = true,
        Delete = true,
        Update = true
        };

        ordersGrid.SetColumnAsForeignKey("CustomerID");
        ordersGrid.SetColumnLookup("EmployeeID", new Lookup("Employees", "EmployeeId", "lastname + ',' + firstname"));
        ordersGrid.SetColumnLookup("ShipVia", new Lookup("Shippers", "ShipperId", "CompanyName"));
        ordersGrid.SetColumnFormat("Freight", "c");
        ordersGrid.SetColumnLabel("EmployeeID", "Employee");

        DbNetEditCore customersEdit = new DbNetEditCore("northwind", "customers")
        {
        Columns = new List<string>
            { "CustomerID", "CompanyName", "Address", "City" },
            Insert = true,
            QuickSearch = true,
            Delete = true
            };

            customersEdit.SetColumnHidden("CustomerID");
            customersEdit.AddLinkedControl(ordersGrid);

            @@customersEdit.Render()
        }
