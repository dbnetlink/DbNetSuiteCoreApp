@page
@using DbNetSuiteCoreApp.ViewModels;
@using DbNetSuiteCore.Components;

@model SampleModel

@section Title
    {
    <p>Lookups can be configured to be dependent or filtered based on another column in the form. To do this simply include a filter in the lookup SQL that uses a parameter with the same name as the column upon which it depends. In this example the <b>city</b> lookup is dependent on the selected <b>country</b> which is in turn dependent on the selected <b>region</b>.</p>
}

@section Control
    {
    @{
        DbNetEditCore customersEdit = new DbNetEditCore("northwind", "customers");
        customersEdit.Columns = new List<string>() { "CustomerId", "CompanyName", "Address", "Region", "Country", "City", "Phone", "Fax" };
        customersEdit.Insert = true;
        customersEdit.Column("CustomerID").Hidden();
        customersEdit.Column("region").Lookup();
        customersEdit.Column("country").Lookup(new Lookup("select distinct country from customers where region = @region"));
        customersEdit.Column("city").Lookup(new Lookup("select distinct city from customers where country = @country"));
        @customersEdit.Render()
    }
}

@section Source {
DbNetEditCore customersEdit = new DbNetEditCore("northwind", "customers");
customersEdit.Columns = new List<string>() { "CustomerId", "CompanyName", "Address", "Region", "Country", "City", "Phone", "Fax" };
customersEdit.Insert = true;
customersEdit.Column("CustomerID").Hidden();
customersEdit.Column("region").Lookup();
customersEdit.Column("country").Lookup(new Lookup("select distinct country from customers where region = @@region"));
customersEdit.Column("city").Lookup(new Lookup("select distinct city from customers where country = @@country"));
@@customersEdit.Render()
}
