@page
@using DbNetSuiteCoreApp.ViewModels;
@using DbNetSuiteCore.Components;
@using DbNetSuiteCore.Enums;
@using System.Globalization

@model SampleModel

@section Title
    {
    <p>This is an example of creating a multi-series Google chart using the chart integration @Model.HelpLink("properties.htm#GoogleChartOptions", "GoogleChartOptions") property</p>
}
@section Styles
    {
    <style>
        #chartarea {
            border: 1pt solid silver;
        }
    </style>
}

@section Control
    {
    @{
        string columnTemplate = "case when strftime('%m', OrderDate) = '{month}' then (Invoices.UnitPrice*Quantity) end as period{month}";
        string fromPart = "Invoices join Products on Products.ProductID = Invoices.ProductId";

        var columns = new List<string>() { "CategoryId" };
        var labels = new List<string>() { "Category" };

        for (int month = 1; month <= 12; month++)
        {
            columns.Add(columnTemplate.Replace("{month}", month.ToString("00")));
            labels.Add(CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(month));
        }

        DbNetGridCore productSalesByCategoryGrid = new DbNetGridCore("northwind", fromPart, "salesGrid");
        productSalesByCategoryGrid.Columns = columns;
        productSalesByCategoryGrid.Labels = labels;
        productSalesByCategoryGrid.GroupBy = true;

        for (int month = 1; month <= 12; month++)
        {
            productSalesByCategoryGrid.SetColumnProperty($"period{month.ToString("00")}", ColumnPropertyType.Format, "c");
            productSalesByCategoryGrid.SetColumnProperty($"period{month.ToString("00")}", ColumnPropertyType.DataType, nameof(Decimal));
            productSalesByCategoryGrid.SetColumnProperty($"period{month.ToString("00")}", ColumnPropertyType.Aggregate, AggregateType.Sum);
        }

        productSalesByCategoryGrid.SetColumnProperty("CategoryId", ColumnPropertyType.Lookup, new Lookup("Categories", "CategoryId", "CategoryName"));
        productSalesByCategoryGrid.GoogleChartOptions = new GoogleChartOptions() { Type = GoogleChartType.LineChart, PanelId = "chartarea", FunctionName = "chartOptions" };
        @productSalesByCategoryGrid.Render()
    }
}

@section Markup
    {
    <div class="source">
        <h6>Monthly Sales By Category</h6>

        <table>
            <tr>
                <td>
                    <div id="salesGrid"></div>
                </td>
            </tr>
            <tr>
                <td class="chart-cell">
                    <div id="chartarea"></div>
                </td>
            </tr>
        </table>
    </div>
}

@section Scripts
    {
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript" class="source">
        function chartOptions(grid, options) {
            options.title = "Monthly Sales By Category";
            options.width = 800;
            options.height = 400;
            options.chartArea = { width: '70%', height: '80%' };
        }
    </script>
}


@section Source
    {
    <pre>
    <code class="language-csharp">
string columnTemplate = "case when strftime('%m', OrderDate) = '{month}' then (Invoices.UnitPrice*Quantity) end as period{month}";
string fromPart = "Invoices join Products on Products.ProductID = Invoices.ProductId";

var columns = new List<string>() { "CategoryId" };
var labels = new List<string>() {"Category"};

for (int month = 1; month <= 12; month++)
{
    columns.Add(columnTemplate.Replace("{month}", month.ToString("00")));
    labels.Add(CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(month));
}

DbNetGridCore productSalesByCategoryGrid = new DbNetGridCore("northwind", fromPart);
productSalesByCategoryGrid.Columns = columns;
productSalesByCategoryGrid.Labels = labels;
productSalesByCategoryGrid.GroupBy = true;

for (int month = 1; month <= 12; month++)
{
    productSalesByCategoryGrid.SetColumnProperty($"period{month.ToString("00")}", ColumnPropertyType.Format, "c");
    productSalesByCategoryGrid.SetColumnProperty($"period{month.ToString("00")}", ColumnPropertyType.DataType, nameof(Decimal));
    productSalesByCategoryGrid.SetColumnProperty($"period{month.ToString("00")}", ColumnPropertyType.Aggregate, AggregateType.Sum);
}

    productSalesByCategoryGrid.SetColumnProperty("CategoryId", ColumnPropertyType.Lookup, new Lookup("Categories", "CategoryId", "CategoryName"));
productSalesByCategoryGrid.GoogleChartOptions = new GoogleChartOptions() { Type = GoogleChartType.LineChart, PanelId = "chartarea", FunctionName = "chartOptions" };

@@productSalesByCategoryGrid.Render()
            </code>
        </pre>
}