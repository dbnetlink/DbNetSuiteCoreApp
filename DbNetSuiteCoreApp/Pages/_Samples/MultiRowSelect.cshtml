@page
@using DbNetSuiteCoreApp.ViewModels;
@using DbNetSuiteCore.Components;
@using DbNetSuiteCore.Enums;

@model SampleModel

@section Title
{
    <p>Use the @Model.HelpLink("properties.htm#MultiRowSelect", "MultiRowSelect") property to enable the selection of multiple rows. The default automatic selection of the first row and the selection of a row by clicking anywhere in the row can be supressed by setting the @Model.HelpLink("properties.htm#AutoRowSelect", "AutoRowSelect") and @Model.HelpLink("properties.htm#RowSelect", "RowSelect") properties to <b>false</b>. The location of the checkboxes can be configured using the @Model.HelpLink("properties.htm#MultiRowSelectLocation", "MultiRowSelectLocation"). The example also demonstrates use of the <b>OnInitialized</b> event to save a reference to the grid in the client-side code which is then used to access the <b>selectedRows</b> client-side method</p>
}

@section Control
{
    <table class="table-selection">
        <tr>
            <td><b>Multi-row select location</b></td>
            <td>
                <select class="form-select" id="multiRowSelectLocation">
                    <option value="Left">Left</option>
                    <option value="Right">Right</option>
                </select>
            </td>
            <td><button type="button" id="showRowsBtn" class="btn btn-primary">Show selected rows</button></td>
        </tr>
    </table>
    <hr />
    @{
        DbNetGridCore customersGrid = new DbNetGridCore("northwind", "customers")
        {
            PageSize = 10,
            MultiRowSelect = true,
            AutoRowSelect = false,
            RowSelect = false,
            MultiRowSelectLocation = Model.MultiRowSelectLocation
        };

        customersGrid.Bind(EventType.OnInitialized, "saveGridReference");
        @customersGrid.Render()
    }
}

@section Source
    {
    <pre>
    <code class="language-csharp">
DbNetGridCore customersGrid = new DbNetGridCore("northwind", "customers")
{
    PageSize = 10,
    MultiRowSelect = true,
    AutoRowSelect = false,
    RowSelect = false,
    MultiRowSelectLocation = Model.MultiRowSelectLocation
};

customersGrid.Bind(EventType.OnInitialized, "saveGridReference");
@@customersGrid.Render()
            </code>
        </pre>
}
@section Scripts
    {
    <script type="text/javascript" class="source">
var multiRowSelectLocation = "@Model.MultiRowSelectLocation";
var customersGrid;

$(document).ready(init);

function init() {
    $('#multiRowSelectLocation').val(multiRowSelectLocation).change(function (event) { reloadPage(event) });
    $('#showRowsBtn').click(showSelectedRows);
}

function saveGridReference(grid)
{
    customersGrid = grid;
}

function showSelectedRows() {
    var selectedRows = customersGrid.selectedRows();
    var ids = [];
    for (var i = 0; i < selectedRows.length; i++)
    {
        ids.push(selectedRows[i].dataset["id"])
    }

    if (ids.length == 0)
    {
        alert("No rows selected")
    }
    else
    {
        alert("You have selected the following rows:\r\n" + ids.join(","))
    }
   
}

function reloadPage(event) {
    window.location.href = window.location.href.replace(/[\?#].*|$/, "?multiRowSelectLocation=" + $('#multiRowSelectLocation').val());
}
    </script>
}